{"version":3,"sources":["tiny-xml.js"],"names":["global","iterate","obj","fn","ctx","Object","keys","forEach","i","call","parse","arg","DOMParser","parseFromString","node","value","name","replace","start","end","cdata","test","serialize","key","wrap","top","x","larg","xml","Document","XMLSerializer","serializeToString","boolean_number_string","isNaN","Array","v","k","require","valid","getElementsByTagName","length","version","exports","define","amd","module","window"],"mappings":"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","file":"unknown","sourcesContent":["/**\r\n * Tiny XML utility for Client and Server\r\n *\r\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @copyright 2021\r\n * @license BSD-3-Clause\r\n * @link http://avoidwork.github.io/tiny-xml\r\n * @version 2.0.0\r\n */\r\n(function (global) {\r\n\tconst DOMParser = global.DOMParser || require(\"xmldom\").DOMParser;\r\n\tconst XMLSerializer = global.XMLSerializer || require(\"xmldom\").XMLSerializer;\r\n\r\n\tconst cdata = /\\&|<|>|\\\"|\\'|\\t|\\r|\\n|\\@|\\$/,\r\n\t\tboolean_number_string = /boolean|number|string/;\r\n\r\n\tfunction iterate (obj, fn, ctx = obj) {\r\n\t\tObject.keys(obj).forEach(i => {\r\n\t\t\tfn.call(ctx, obj[i], i);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction parse (arg) {\r\n\t\treturn new DOMParser().parseFromString(arg, \"text/xml\");\r\n\t}\r\n\r\n\tfunction node (arg = \"\", value) {\r\n\t\tconst name = arg.replace(/\\s/g, \"\");\r\n\r\n\t\tlet start = \"\",\r\n\t\t\tend = \"\";\r\n\r\n\t\tif (name !== \"\") {\r\n\t\t\tstart = `<${name}>`;\r\n\t\t\tend = `</${name}>`;\r\n\t\t}\r\n\r\n\t\treturn start + (cdata.test(value) ? \"<![CDATA[\" + value + \"]]>\" : value) + end;\r\n\t}\r\n\r\n\tfunction serialize (arg, key = \"xml\", wrap = true, top = true) {\r\n\t\tlet x = wrap ? `<${key}>` : \"\",\r\n\t\t\tlarg = arg;\r\n\r\n\t\tif (larg !== null && larg.xml) {\r\n\t\t\tlarg = larg.xml;\r\n\t\t}\r\n\r\n\t\tif (typeof Document !== \"undefined\" && larg instanceof Document) {\r\n\t\t\tlarg = new XMLSerializer().serializeToString(larg);\r\n\t\t}\r\n\r\n\t\tif (boolean_number_string.test(typeof larg)) {\r\n\t\t\tx += node(isNaN(key) ? key : \"item\", larg);\r\n\t\t} else if (larg === null || larg === undefined) {\r\n\t\t\tx += \"null\";\r\n\t\t} else if (larg instanceof Array) {\r\n\t\t\tlarg.forEach(function (v) {\r\n\t\t\t\tx += serialize(v, \"item\", boolean_number_string.test(typeof v) ? false : true, false);\r\n\t\t\t});\r\n\t\t} else if (larg instanceof Object) {\r\n\t\t\titerate(larg, function (v, k) {\r\n\t\t\t\tx += boolean_number_string.test(typeof v) ? node(k, v) : serialize(v, k, top, false);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tx += wrap ? \"</\" + key + \">\" : \"\";\r\n\r\n\t\tif (top) {\r\n\t\t\tx = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF8\\\"?>\" + x;\r\n\t\t}\r\n\r\n\t\treturn x;\r\n\t}\r\n\r\n\tfunction valid (arg) {\r\n\t\treturn parse(arg).getElementsByTagName(\"parsererror\").length === 0;\r\n\t}\r\n\r\n\tconst xml = {\r\n\t\tparse: parse,\r\n\t\tserialize: serialize,\r\n\t\tvalid: valid,\r\n\t\tversion: \"{{VERSION}}\"\r\n\t};\r\n\r\n\t// Node, AMD & window supported\r\n\tif (typeof exports !== \"undefined\") {\r\n\t\tmodule.exports = xml;\r\n\t} else if (typeof define === \"function\" && define.amd !== void 0) {\r\n\t\tdefine(function () {\r\n\t\t\treturn xml;\r\n\t\t});\r\n\t} else {\r\n\t\tglobal.xml = xml;\r\n\t}\r\n}(typeof window !== \"undefined\" ? window : global));\r\n"]}