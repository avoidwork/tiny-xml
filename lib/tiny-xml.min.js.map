{"version":3,"sources":["tiny-xml.js"],"names":["_typeof","obj","Symbol","constructor","global","iterate","fn","ctx","arguments","length","undefined","Object","keys","forEach","i","call","parse","arg","DOMParser","parseFromString","node","name","value","cdata","test","serialize","key","wrap","top","x","larg","xml","Document","XMLSerializer","serializeToString","boolean_number_string","isNaN","Array","v","k","valid","getElementsByTagName","require","version","exports","module","define","amd","window"],"mappings":";;AAAA,YAEA,SAASA,SAAQC,GAAO,MAAOA,IAAyB,mBAAXC,SAA0BD,EAAIE,cAAgBD,OAAS,eAAkBD,IAWtH,SAAWG,GAOV,QAASC,GAAQJ,EAAKK,GACrB,GAAIC,GAAMC,UAAUC,QAAU,GAAsBC,SAAjBF,UAAU,GAAmBP,EAAMO,UAAU,EAEhFG,QAAOC,KAAKX,GAAKY,QAAQ,SAAUC,GAClCR,EAAGS,KAAKR,EAAKN,EAAIa,GAAIA,KAIvB,QAASE,GAAMC,GACd,OAAO,GAAIC,IAAYC,gBAAgBF,EAAK,YAG7C,QAASG,GAAKC,EAAMC,GACnB,MAAO,IAAMD,EAAO,IAAME,EAAMC,KAAKF,GAAS,YAAcA,EAAQ,MAAQA,EAAQ,KAAOD,EAAO,IAGnG,QAASI,GAAUR,GAClB,GAAIS,GAAMlB,UAAUC,QAAU,GAAsBC,SAAjBF,UAAU,GAAmB,MAAQA,UAAU,GAC9EmB,EAAOnB,UAAUC,QAAU,GAAsBC,SAAjBF,UAAU,IAAmB,EAAOA,UAAU,GAC9EoB,EAAMpB,UAAUC,QAAU,GAAsBC,SAAjBF,UAAU,IAAmB,EAAOA,UAAU,GAE7EqB,EAAIF,EAAO,IAAMD,EAAM,IAAM,GAC7BI,EAAOb,CA8BX,OA5Ba,QAATa,GAAiBA,EAAKC,MACzBD,EAAOA,EAAKC,KAGW,mBAAbC,WAA4BF,YAAgBE,YACtDF,GAAO,GAAIG,IAAgBC,kBAAkBJ,IAG1CK,EAAsBX,KAAqB,mBAATM,GAAuB,YAAc9B,QAAQ8B,IAClFD,GAAKT,EAAKgB,MAAMV,GAAOA,EAAM,OAAQI,GAClB,OAATA,GAA0BpB,SAAToB,EAC3BD,GAAK,OACKC,YAAgBO,OAC1BP,EAAKjB,QAAQ,SAAUyB,GACtBT,GAAKJ,EAAUa,EAAG,QAAQ,GAAM,KAEvBR,YAAgBnB,SAC1BN,EAAQyB,EAAM,SAAUQ,EAAGC,GAC1BV,GAAKJ,EAAUa,EAAGC,GAAG,GAAM,KAI7BV,GAAKF,EAAO,KAAOD,EAAM,IAAM,GAE3BE,IACHC,EAAI,wCAA8CA,GAG5CA,EAGR,QAASW,GAAMvB,GACd,MAAiE,KAA1DD,EAAMC,GAAKwB,qBAAqB,eAAehC,OA9DvD,GAAIS,GAAYd,EAAOc,WAAawB,QAAQ,UAAUxB,UAClDe,EAAgB7B,EAAO6B,eAAiBS,QAAQ,UAAUT,cAE1DV,EAAQ,8BACRY,EAAwB,wBA6DxBJ,GACHf,MAAOA,EACPS,UAAWA,EACXe,MAAOA,EACPG,QAAS,QAIa,oBAAZC,SACVC,OAAOD,QAAUb,EACW,kBAAXe,SAAyBA,OAAOC,IACjDD,OAAO,WACN,MAAOf,KAGR3B,EAAO2B,IAAMA,GAEM,mBAAXiB,QAAyBA,OAAS5C","file":"tiny-xml.min.js","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\n/**\r\n * Tiny XML utility for Client and Server\r\n *\r\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @copyright 2015\r\n * @license BSD-3-Clause\r\n * @link http://avoidwork.github.io/tiny-xml\r\n * @version 1.0.4\r\n */\n(function (global) {\n\tvar DOMParser = global.DOMParser || require(\"xmldom\").DOMParser;\n\tvar XMLSerializer = global.XMLSerializer || require(\"xmldom\").XMLSerializer;\n\n\tvar cdata = /\\&|<|>|\\\"|\\'|\\t|\\r|\\n|\\@|\\$/,\n\t    boolean_number_string = /boolean|number|string/;\n\n\tfunction iterate(obj, fn) {\n\t\tvar ctx = arguments.length <= 2 || arguments[2] === undefined ? obj : arguments[2];\n\n\t\tObject.keys(obj).forEach(function (i) {\n\t\t\tfn.call(ctx, obj[i], i);\n\t\t});\n\t}\n\n\tfunction parse(arg) {\n\t\treturn new DOMParser().parseFromString(arg, \"text/xml\");\n\t}\n\n\tfunction node(name, value) {\n\t\treturn \"<\" + name + \">\" + cdata.test(value) ? \"<![CDATA[\" + value + \"]]>\" : value + \"</\" + name + \">\";\n\t}\n\n\tfunction serialize(arg) {\n\t\tvar key = arguments.length <= 1 || arguments[1] === undefined ? \"xml\" : arguments[1];\n\t\tvar wrap = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\t\tvar top = arguments.length <= 3 || arguments[3] === undefined ? true : arguments[3];\n\n\t\tvar x = wrap ? \"<\" + key + \">\" : \"\",\n\t\t    larg = arg;\n\n\t\tif (larg !== null && larg.xml) {\n\t\t\tlarg = larg.xml;\n\t\t}\n\n\t\tif (typeof Document !== \"undefined\" && larg instanceof Document) {\n\t\t\tlarg = new XMLSerializer().serializeToString(larg);\n\t\t}\n\n\t\tif (boolean_number_string.test(typeof larg === \"undefined\" ? \"undefined\" : _typeof(larg))) {\n\t\t\tx += node(isNaN(key) ? key : \"item\", larg);\n\t\t} else if (larg === null || larg === undefined) {\n\t\t\tx += \"null\";\n\t\t} else if (larg instanceof Array) {\n\t\t\tlarg.forEach(function (v) {\n\t\t\t\tx += serialize(v, \"item\", true, false);\n\t\t\t});\n\t\t} else if (larg instanceof Object) {\n\t\t\titerate(larg, function (v, k) {\n\t\t\t\tx += serialize(v, k, true, false);\n\t\t\t});\n\t\t}\n\n\t\tx += wrap ? \"</\" + key + \">\" : \"\";\n\n\t\tif (top) {\n\t\t\tx = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF8\\\"?>\" + x;\n\t\t}\n\n\t\treturn x;\n\t}\n\n\tfunction valid(arg) {\n\t\treturn parse(arg).getElementsByTagName(\"parsererror\").length === 0;\n\t}\n\n\tvar xml = {\n\t\tparse: parse,\n\t\tserialize: serialize,\n\t\tvalid: valid,\n\t\tversion: \"1.0.4\"\n\t};\n\n\t// Node, AMD & window supported\n\tif (typeof exports !== \"undefined\") {\n\t\tmodule.exports = xml;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn xml;\n\t\t});\n\t} else {\n\t\tglobal.xml = xml;\n\t}\n})(typeof window !== \"undefined\" ? window : global);\n"]}